/**
 * Í≥µÏßÄÏÇ¨Ìï≠ ÌåùÏóÖ Ïª¥Ìè¨ÎÑåÌä∏ ÌÖåÏä§Ìä∏
 */
import React from 'react';
import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import NoticePopup from '../../components/NoticePopup';

// Mock localStorage
const localStorageMock = {
  getItem: jest.fn(),
  setItem: jest.fn(),
  removeItem: jest.fn(),
  clear: jest.fn(),
};
global.localStorage = localStorageMock;

describe('NoticePopup', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it('Ï≤òÏùå Î∞©Î¨∏ Ïãú Í≥µÏßÄÏÇ¨Ìï≠ ÌåùÏóÖÏù¥ ÌëúÏãúÎêòÏñ¥Ïïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    expect(screen.getByText('üéâ ÏÉàÎ°úÏö¥ Í∏∞Îä• ÏóÖÎç∞Ïù¥Ìä∏!')).toBeInTheDocument();
    expect(screen.getByText('Ìà¨ÏûêÎì±Î°ù')).toBeInTheDocument();
    expect(screen.getByText('ÎÇòÏùòÌà¨ÏûêÏ¢ÖÎ™©')).toBeInTheDocument();
  });

  it('3Ïùº Ïù¥ÎÇ¥Ïóê Î≥∏ Í≤ΩÏö∞ Í≥µÏßÄÏÇ¨Ìï≠ ÌåùÏóÖÏù¥ ÌëúÏãúÎêòÏßÄ ÏïäÏïÑÏïº Ìï®', () => {
    const recentTime = new Date().getTime() - (2 * 24 * 60 * 60 * 1000); // 2Ïùº Ï†Ñ
    localStorageMock.getItem.mockReturnValue(recentTime.toString());
    
    const { container } = render(<NoticePopup />);
    
    // Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä Î†åÎçîÎßÅÎêòÏßÄ ÏïäÏïòÎäîÏßÄ ÌôïÏù∏
    expect(container.firstChild).toBeNull();
  });

  it('3Ïùº Ïù¥ÏÉÅ ÏßÄÎÇú Í≤ΩÏö∞ Í≥µÏßÄÏÇ¨Ìï≠ ÌåùÏóÖÏù¥ ÌëúÏãúÎêòÏñ¥Ïïº Ìï®', () => {
    const oldTime = new Date().getTime() - (4 * 24 * 60 * 60 * 1000); // 4Ïùº Ï†Ñ
    localStorageMock.getItem.mockReturnValue(oldTime.toString());
    
    render(<NoticePopup />);
    
    expect(screen.getByText('üéâ ÏÉàÎ°úÏö¥ Í∏∞Îä• ÏóÖÎç∞Ïù¥Ìä∏!')).toBeInTheDocument();
  });

  it('ÌôïÏù∏ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÌåùÏóÖÏù¥ Îã´ÌòÄÏïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    const confirmButton = screen.getByText('ÌôïÏù∏');
    fireEvent.click(confirmButton);
    
    expect(screen.queryByText('üéâ ÏÉàÎ°úÏö¥ Í∏∞Îä• ÏóÖÎç∞Ïù¥Ìä∏!')).not.toBeInTheDocument();
  });

  it('X Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÌåùÏóÖÏù¥ Îã´ÌòÄÏïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    const closeButton = screen.getByRole('button', { name: '' }); // X Î≤ÑÌäº
    fireEvent.click(closeButton);
    
    expect(screen.queryByText('üéâ ÏÉàÎ°úÏö¥ Í∏∞Îä• ÏóÖÎç∞Ïù¥Ìä∏!')).not.toBeInTheDocument();
  });

  it('3ÏùºÍ∞Ñ Î≥¥ÏßÄÏïäÍ∏∞ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï†ÄÏû•ÎêòÍ≥† ÌåùÏóÖÏù¥ Îã´ÌòÄÏïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    const dontShowButton = screen.getByText('3ÏùºÍ∞Ñ Î≥¥ÏßÄÏïäÍ∏∞');
    fireEvent.click(dontShowButton);
    
    expect(localStorageMock.setItem).toHaveBeenCalledWith(
      'stock-insight-notice-2025-10-11',
      expect.any(String)
    );
    // ÌåùÏóÖÏù¥ Îã´ÌòîÎäîÏßÄ ÌôïÏù∏
    expect(screen.queryByText('üéâ ÏÉàÎ°úÏö¥ Í∏∞Îä• ÏóÖÎç∞Ïù¥Ìä∏!')).not.toBeInTheDocument();
  });

  it('Í≥µÏßÄÏÇ¨Ìï≠ ÎÇ¥Ïö©Ïù¥ Ïò¨Î∞îÎ•¥Í≤å ÌëúÏãúÎêòÏñ¥Ïïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    // Ï£ºÏöî ÏóÖÎç∞Ïù¥Ìä∏ ÎÇ¥Ïö© ÌôïÏù∏ - Î∂ÄÎ∂Ñ ÌÖçÏä§Ìä∏Î°ú Í≤ÄÏÉâ
    expect(screen.getByText(/Ìà¨ÏûêÎì±Î°ù/)).toBeInTheDocument();
    expect(screen.getByText(/ÎÇòÏùòÌà¨ÏûêÏ¢ÖÎ™©/)).toBeInTheDocument();
    expect(screen.getByText(/Ï¢ÖÎ™©Î∂ÑÏÑù/)).toBeInTheDocument();
    
    // Ìà¨ÏûêÎì±Î°ù Í∏∞Îä• ÏÑ§Î™Ö ÌôïÏù∏
    expect(screen.getByText(/Ï∂îÏ≤ú Ï¢ÖÎ™© Î¶¨Ïä§Ìä∏ÏóêÏÑú Î∞îÎ°ú Ìà¨ÏûêÏ¢ÖÎ™© Îì±Î°ù/)).toBeInTheDocument();
    
    // ÎÇòÏùòÌà¨ÏûêÏ¢ÖÎ™© Í∏∞Îä• ÏÑ§Î™Ö ÌôïÏù∏
    expect(screen.getByText(/Îß§ÏàòÏùº, Î≥¥Ïú†Í∏∞Í∞Ñ, ÏàòÏùµÎ•† ÌôïÏù∏/)).toBeInTheDocument();
    
    // Ï¢ÖÎ™©Î∂ÑÏÑù Í∏∞Îä• ÏÑ§Î™Ö ÌôïÏù∏
    expect(screen.getByText(/Í∞úÎ≥Ñ Ï¢ÖÎ™© ÏÉÅÏÑ∏ Î∂ÑÏÑù Í∏∞Îä•/)).toBeInTheDocument();
  });

  it('ÌåÅ Î©îÏãúÏßÄÍ∞Ä ÌëúÏãúÎêòÏñ¥Ïïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    expect(screen.getByText(/üí° Îß§ÏàòÍ∞ÄÍ≤©, ÏàòÎüâ, Îß§ÏàòÏùºÏùÑ ÏûÖÎ†•ÌïòÏó¨ Ìà¨ÏûêÍ¥ÄÎ¶¨Î•º ÏãúÏûëÌïòÏÑ∏Ïöî!/)).toBeInTheDocument();
  });

  it('ÎÇ†ÏßúÍ∞Ä Ïò¨Î∞îÎ•¥Í≤å ÌëúÏãúÎêòÏñ¥Ïïº Ìï®', () => {
    localStorageMock.getItem.mockReturnValue(null);
    
    render(<NoticePopup />);
    
    expect(screen.getByText(/2025ÎÖÑ 10Ïõî 11Ïùº/)).toBeInTheDocument();
  });
});
